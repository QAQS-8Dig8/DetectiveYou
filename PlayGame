import os
import pygame
import tkinter as tk
from pygame.locals import *
import win32gui, win32con
import time
from sys import exit

pygame.mixer.pre_init(44100,16,2,4096)
pygame.init()
master = tk.Tk()    

def wrong_answer():
    message = tk.Tk()
    tk.Label(message, text="Wrong answer!").grid(row=0)
    tk.Label(message, text="Be careful! You only get 3 wrong answers per game!").grid(row=1)
    message.mainloop()

def game_over():
    you_lost = tk.Tk()
    tk.Label(you_lost, text="Game Over!").grid(row=1)
    you_lost.mainloop()
    pygame.display.quit()
    welcomeScreen()

def settingsInput():
    
    
    OptionListMajor = [
    "Arts and Science",
    "Business",
    "Journalism",
    "Law",
    "Pharmacy",
    "Education",
    "Other/None"
    ] 

    OptionListGuide = [
    "Santa",
    "Harry Potter",
    "Gollum"
    ] 

    variable = tk.StringVar(master)
    variable.set(OptionListMajor[0])

    variable2 = tk.StringVar(master)
    variable2.set(OptionListGuide[0])

    tk.Label(master, text="Name:").grid(row=0)
    tk.Label(master, text="School of Major:").grid(row=1)
    tk.Label(master, text="Choose a guide:").grid(row=2)
    

    e1 = tk.Entry(master)
    e2 = tk.OptionMenu(master, variable, *OptionListMajor)
    e3 = tk.OptionMenu(master, variable2, *OptionListGuide)

    e1.grid(row=0, column=1)
    e2.grid(row=1, column=1)
    e3.grid(row=2, column=1)

    button = tk.Button(master, text="done", command=lambda:[clueOne(e1, variable, variable2), master.destroy()]).grid(row=3)
    
    master.mainloop()

def textObject(text, font, text_color):
    textSurface = font.render(text, True, text_color)
    return textSurface, textSurface.get_rect()


def create_screen(screen, title, background):
    
    hwnd = win32gui.GetForegroundWindow() 
    win32gui.ShowWindow(hwnd, win32con.SW_MAXIMIZE)
    pygame.display.set_caption(title)
    
    pygame.display.set_icon(background)
    screen.fill((0,0,0))
    screen.blit(pygame.transform.scale(background, (500,500)), (0,0))
    pygame.display.flip()
    
def make_fullscreen(background, event):
    screen = pygame.display.set_mode(event.dict['size'], HWSURFACE | DOUBLEBUF | RESIZABLE)
    screen.blit(pygame.transform.scale(background, event.dict['size']), (0, 0))
    pygame.display.flip()

def riddle_display(screen, riddle):
    riddle_box = pygame.draw.rect(screen, [225,225,225], [0, 0, 1400, 100])
    riddle_text = pygame.font.Font("freesansbold.ttf",30)
    textSurf, textRect = textObject(riddle, riddle_text, [0,0,0])
    textRect.center = ((0+(1400/2)), (0+(100/2)))
    screen.blit(textSurf, textRect)
    pygame.display.update()
    
def help_button(screen, name):
    help_box = pygame.draw.rect(screen, [225,225,225], [10, 350, 300, 30])
    help_text = pygame.font.Font("freesansbold.ttf",15)
    textSurf, textRect = textObject("Hi "+str(name)+"! Click here!", help_text, [0,0,0])
    textRect.center = ((10+(300/2)), (350+(30/2)))
    screen.blit(textSurf, textRect)
    pygame.display.update()
    
                
def option1(screen, text, option1_button_color):
    option1_button = pygame.draw.ellipse(screen, option1_button_color, [700, 600, 250, 100])
    option1_button_text = pygame.font.Font("freesansbold.ttf",35)
    textSurf, textEllipse = textObject(text, option1_button_text, [0,0,0])
    textEllipse.center = ((700+(250/2)), (600+(100/2)))
    screen.blit(textSurf, textEllipse)
    pygame.display.update()
    
def option2(screen, text, option2_button_color):
    option2_button = pygame.draw.ellipse(screen, option2_button_color, [1000, 600, 250, 100])
    option2_button_text = pygame.font.Font("freesansbold.ttf",35)
    textSurf, textEllipse = textObject(text, option2_button_text, [0,0,0])
    textEllipse.center = ((1000+(250/2)), (600+(100/2)))
    screen.blit(textSurf, textEllipse)
    pygame.display.update()
    
def option3(screen, text, option3_button_color):
    option3_button = pygame.draw.ellipse(screen, option3_button_color, [400, 600, 250, 100])
    option3_button_text = pygame.font.Font("freesansbold.ttf",35)
    textSurf, textEllipse = textObject(text, option3_button_text, [0,0,0])
    textEllipse.center = ((400+(250/2)), (600+(100/2)))
    screen.blit(textSurf, textEllipse)
    pygame.display.update()


def welcomeScreen():
#create the gui and a title caption in the gui overhead bar 
   
    screen = pygame.display.set_mode((500, 500), HWSURFACE | DOUBLEBUF | RESIZABLE)
    background = pygame.image.load('welcomescreen_Moment24.jpg')
    create_screen(screen, 'Detective You', background)

#this loads the audio track
    pygame.mixer.music.load("almamater.mp3")
    pygame.mixer.music.set_volume(1)
    pygame.mixer.music.play(-1)

#this loop keeps the graphics and media on the screen
    button_color = [230,135,0]
    loop = True
    while (loop):
        
        begin_button = pygame.draw.ellipse(screen, button_color, [800, 520, 225, 100])
        button_text = pygame.font.Font("freesansbold.ttf",45)
        textSurf, textEllipse = textObject("Begin", button_text, [0,0,0])
        textEllipse.center = ((800+(225/2)), (520+(100/2)))
        screen.blit(textSurf, textEllipse)
        pygame.display.update()
    
        pygame.event.pump()
    
        for event in pygame.event.get():
            pos = pygame.mouse.get_pos()
            if event.type == pygame.quit: 
                pygame.mixer.music.stop()
                pygame.display.quit()
                
            if 800+225 > pos[0] > 800 and 520+100 > pos[1] > 520:
                button_color = [55, 115, 250]
                begin_button = pygame.draw.ellipse(screen, button_color, [800, 520, 225, 100])
                button_text = pygame.font.Font("freesansbold.ttf",45)
                textSurf, textEllipse = textObject("Begin", button_text, [0,0,0])
                textEllipse.center = ((800+(225/2)), (520+(100/2)))
                screen.blit(textSurf, textEllipse)
                pygame.display.update()
                if event.type == pygame.MOUSEBUTTONDOWN:
                    button_color = [55, 115, 150]
                    begin_button = pygame.draw.ellipse(screen, button_color, [800, 520, 225, 100])
                    button_text = pygame.font.Font("freesansbold.ttf",45)
                    textSurf, textEllipse = textObject("Begin", button_text, [0,0,0])
                    textEllipse.center = ((800+(225/2)), (520+(100/2)))
                    screen.blit(textSurf, textEllipse)
                    pygame.display.update()
                if event.type == pygame.MOUSEBUTTONUP:
                    button_color = [230, 135, 0]
                    begin_button = pygame.draw.ellipse(screen, button_color, [800, 520, 225, 100])
                    button_text = pygame.font.Font("freesansbold.ttf",45)
                    settingsInput()
            else:
                button_color = [230, 135, 0]
                begin_button = pygame.draw.ellipse(screen, button_color, [800, 520, 225, 100])
                button_text = pygame.font.Font("freesansbold.ttf",45)
                textSurf, textEllipse = textObject("Begin", button_text, [0,0,0])
                textEllipse.center = ((800+(225/2)), (520+(100/2)))
                screen.blit(textSurf, textEllipse)
                pygame.display.update()
           
        
            if event.type == VIDEORESIZE:
                make_fullscreen(background, event)

def clueOne(e1, e2, e3): 
    pygame.display.quit()

    name = e1.get()
    major = e2.get()
    guide = e3.get()
    pygame.mixer.music.stop()
    wrong_answers = 0
    master.destroy()
    screen = pygame.display.set_mode((500, 500), HWSURFACE | DOUBLEBUF | RESIZABLE)
    if guide == "Santa":
        background = pygame.image.load('olmstedcartoonsanta.JPG')
    elif guide == "Harry Potter":
        background = pygame.image.load('olmstedcartoonhp.JPG')
    elif guide == "Gollum":
        background = pygame.image.load('olmstedcartoongollum.JPG')
    create_screen(screen, 'Olmsted Coffee Shop', background)

    option1_button_color = [215,132,121]
    option2_button_color = [215,132,121]
    option3_button_color = [215,132,121]
    loop = True 

    while(loop): 
        riddle_display(screen, "Dark roasted coffee beans haveâ€¦")
        help_button(screen, name)
        
        option1(screen, "Richer flavor", option1_button_color)
        option2(screen, "Less caffeine", option2_button_color)
        option3(screen, "Both", option3_button_color)

        pygame.event.pump()
    
        for event in pygame.event.get():
            pos = pygame.mouse.get_pos()
            if event.type == pygame.quit: 
                pygame.display.quite()
                
            if 700+250 > pos[0] > 700 and 600+100 > pos[1] > 600:
                option1_button_color = [55, 115, 250]
                option1(screen, "Richer flavor", option1_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option1_button_color = [55, 115, 150]
                    option1(screen, "Richer flavor", option1_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option1_button_color = [215,132,121]
                    option1(screen, "Richer flavor", option1_button_color)
                    wrong_answers += 1
                    if wrong_answers > 3:
                        game_over()
                    else:
                        wrong_answer()
            else:
                option1_button_color = [215,132,121]
                option1(screen, "Richer flavor", option1_button_color)
                
            if 1000+250 > pos[0] > 1000 and 600+100 > pos[1] > 600:
                option2_button_color = [55, 115, 250]
                option2(screen, "Less caffeine", option2_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option2_button_color = [55, 115, 150]
                    option2(screen, "Less caffeine", option2_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option2_button_color = [215, 132, 121]
                    option2(screen, "Less caffeine", option2_button_color)
                    wrong_answers += 1
                    if wrong_answers > 3:
                        game_over()
                    else:
                        wrong_answer()
            else:
                option2_button_color = [215, 132, 121]
                option2(screen, "Less caffeine", option2_button_color)
            
            if 400+250 > pos[0] > 400 and 600+100 > pos[1] > 600:
                option3_button_color = [55, 115, 250]
                option3(screen, "Both", option3_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option3_button_color = [55, 115, 150]
                    option3(screen, "Both", option3_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option3_button_color = [215, 132, 121]
                    option3(screen, "Both", option3_button_color)
                    clueTwo(name, major, guide, wrong_answers)
                    
            else:
                option3_button_color = [215, 132, 121]
                option3(screen, "Both", option3_button_color)
        
            if event.type == VIDEORESIZE:
                make_fullscreen(background, event)

def clueTwo(name, major, guide, wrong_answers):
    pygame.display.quit()
    screen = pygame.display.set_mode((500, 500), HWSURFACE | DOUBLEBUF | RESIZABLE)
    if guide == "Santa":
        background = pygame.image.load('Librarysanta.JPG')
    elif guide == "Harry Potter":
        background = pygame.image.load('Libraryhp.JPG')
    elif guide == "Gollum":
        background = pygame.image.load('Librarygollum.JPG')
    create_screen(screen, 'Library', background)
    
    option1_button_color = [215,132,121]
    option2_button_color = [215,132,121]
    option3_button_color = [215,132,121]
    loop = True 
    
    while(loop): 
        riddle_display(screen, "Who was Bilbo's adopted heir in the Lord of The Rings?")
        help_button(screen, name)
        
        option1(screen, "Frodo", option1_button_color)
        option2(screen, "Drogo", option2_button_color)
        option3(screen, "Otho", option3_button_color)
    
        pygame.event.pump()
    
        for event in pygame.event.get():
            pos = pygame.mouse.get_pos()
            if event.type == pygame.quit: 
                pygame.display.quite()
                
            if 700+250 > pos[0] > 700 and 600+100 > pos[1] > 600:
                option1_button_color = [55, 115, 250]
                option1(screen, "Frodo", option1_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option1_button_color = [55, 115, 150]
                    option1(screen, "Frodo", option1_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option1_button_color = [215, 132, 121]
                    option1(screen, "Frodo", option1_button_color)
                    clueThree(name, major, guide, wrong_answers)
      
            else:
                option1_button_color = [215, 132, 121]
                option1(screen, "Frodo", option1_button_color)
                
            if 1000+250 > pos[0] > 1000 and 600+100 > pos[1] > 600:
                option2_button_color = [55, 115, 250]
                option2(screen, "Drogo", option2_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option2_button_color = [55, 115, 150]
                    option2(screen, "Drogo", option2_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option2_button_color = [215, 132, 121]
                    option2(screen, "Drogo", option2_button_color)
                    wrong_answers += 1
                    if wrong_answers > 3:
                        game_over()
                    else:
                        wrong_answer()
            else:
                option2_button_color = [215, 132, 121]
                option2(screen, "Drogo", option2_button_color)
            
            if 400+250 > pos[0] > 400 and 600+100 > pos[1] > 600:
                option3_button_color = [55, 115, 250]
                option3(screen, "Otho", option3_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option3_button_color = [55, 115, 150]
                    option3(screen, "Otho", option3_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option3_button_color = [215, 132, 121]
                    option3(screen, "Otho", option3_button_color)
                    wrong_answers += 1
                    if wrong_answers > 3:
                        game_over()
                    else:
                        wrong_answer()
                    
            else:
                option3_button_color = [215, 132, 121]
                option3(screen, "Otho", option3_button_color)
        
            if event.type == VIDEORESIZE:
                make_fullscreen(background, event)

def clueThree(name, major, guide, wrong_answers):
    pygame.display.quit()
    screen = pygame.display.set_mode((500, 500), HWSURFACE | DOUBLEBUF | RESIZABLE)
    if guide == "Santa":
        background = pygame.image.load('paintedStreetsanta.JPG')
    elif guide == "Harry Potter":
        background = pygame.image.load('paintedStreethp.JPG')
    elif guide == "Gollum":
        background = pygame.image.load('paintedStreetgollum.JPG')
    create_screen(screen, 'Painted Street', background)

    option1_button_color = [215,132,121]
    option2_button_color = [215,132,121]
    option3_button_color = [215,132,121]
    loop = True 
    
    while(loop): 
        riddle_display(screen, "How many gallons of paint does it take to paint the White House?")
        help_button(screen, name)
        option1(screen, "570", option1_button_color)
        option2(screen, "980", option2_button_color)
        option3(screen, "650", option3_button_color)
    
        pygame.event.pump()
    
        for event in pygame.event.get():
            pos = pygame.mouse.get_pos()
            if event.type == pygame.quit: 
                pygame.display.quite()
                
            if 700+250 > pos[0] > 700 and 600+100 > pos[1] > 600:
                option1_button_color = [55, 115, 250]
                option1(screen, "570", option1_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option1_button_color = [55, 115, 150]
                    option1(screen, "570", option1_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option1_button_color = [215, 132, 121]
                    option1(screen, "570", option1_button_color)
                    clueFour(name, major, guide, wrong_answers)

            else:
                option1_button_color = [215, 132, 121]
                option1(screen, "570", option1_button_color)
                
            if 1000+250 > pos[0] > 1000 and 600+100 > pos[1] > 600:
                option2_button_color = [55, 115, 250]
                option2(screen, "980", option2_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option2_button_color = [55, 115, 150]
                    option2(screen, "980", option2_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option2_button_color = [215, 132, 121]
                    option2(screen, "980", option2_button_color)
                    wrong_answers += 1
                    if wrong_answers > 3:
                        game_over()
                    else:
                        wrong_answer()
            else:
                option2_button_color = [215, 132, 121]
                option2(screen, "980", option2_button_color)
            
            if 400+250 > pos[0] > 400 and 600+100 > pos[1] > 600:
                option3_button_color = [55, 115, 250]
                option3(screen, "650", option3_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option3_button_color = [55, 115, 150]
                    option3(screen, "650", option3_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option3_button_color = [215, 132, 121]
                    option3(screen, "650", option3_button_color)
                    wrong_answers += 1
                    if wrong_answers > 3:
                        game_over()
                    else:
                        wrong_answer()
                    
            else:
                option3_button_color = [215, 132, 121]
                option3(screen, "650", option3_button_color)
        
            if event.type == VIDEORESIZE:
                make_fullscreen(background, event)
    

def clueFour(name, major, guide, wrong_answers):
    pygame.display.quit()
    screen = pygame.display.set_mode((500, 500), HWSURFACE | DOUBLEBUF | RESIZABLE)
    if guide == "Santa":
        background = pygame.image.load('chapelsanta.JPG')
    elif guide == "Harry Potter":
        background = pygame.image.load('chapelhp.JPG')
    elif guide == "Gollum":
        background = pygame.image.load('chapelgollum.JPG')
    create_screen(screen, 'Chapel', background)

    option1_button_color = [215,132,121]
    option2_button_color = [215,132,121]
    option3_button_color = [215,132,121]
    loop = True 
    
    while(loop): 
        riddle_display(screen, "In Greek mythology, what is the offspring of a god and mortal called?")
        help_button(screen, name)
        option1(screen, "A Titan", option1_button_color)
        option2(screen, "A Hero", option2_button_color)
        option3(screen, "An oracle", option3_button_color)
    
        pygame.event.pump()
    
        for event in pygame.event.get():
            pos = pygame.mouse.get_pos()
            if event.type == pygame.quit: 
                pygame.display.quite()
                
            if 700+250 > pos[0] > 700 and 600+100 > pos[1] > 600:
                option1_button_color = [55, 115, 250]
                option1(screen, "A Titan", option1_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option1_button_color = [55, 115, 150]
                    option1(screen, "A Titan", option1_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option1_button_color = [215, 132, 121]
                    option1(screen, "A Titan", option1_button_color)
                    wrong_answers += 1
                    if wrong_answers > 3:
                        game_over()
                    else:
                        wrong_answer()
 
            else:
                option1_button_color = [215, 132, 121]
                option1(screen, "A Titan", option1_button_color)
                
            if 1000+250 > pos[0] > 1000 and 600+100 > pos[1] > 600:
                option2_button_color = [55, 115, 250]
                option2(screen, "A Hero", option2_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option2_button_color = [55, 115, 150]
                    option2(screen, "A Hero", option2_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option2_button_color = [215, 132, 121]
                    option2(screen, "A Hero", option2_button_color)
                    clueFive(name, major, guide, wrong_answers)
            else:
                option2_button_color = [215, 132, 121]
                option2(screen, "A Hero", option2_button_color)
            
            if 400+250 > pos[0] > 400 and 600+100 > pos[1] > 600:
                option3_button_color = [55, 115, 250]
                option3(screen, "An oracle", option3_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option3_button_color = [55, 115, 150]
                    option3(screen, "An oracle", option3_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option3_button_color = [215, 132, 121]
                    option3(screen, "An oracle", option3_button_color)
                    wrong_answers += 1
                    if wrong_answers > 3:
                        game_over()
                    else:
                        wrong_answer()
                    
            else:
                option3_button_color = [215, 132, 121]
                option3(screen, "An oracle", option3_button_color)
        
            if event.type == VIDEORESIZE:
                make_fullscreen(background, event)

def clueFive(name, major, guide, wrong_answers):
    pygame.display.quit()
    screen = pygame.display.set_mode((500, 500), HWSURFACE | DOUBLEBUF | RESIZABLE)
    if guide == "Santa":
        background = pygame.image.load('sheslowsanta.JPG')
    elif guide == "Harry Potter":
        background = pygame.image.load('sheslowhp.JPG')
    elif guide == "Gollum":
        background = pygame.image.load('sheslowgollum.JPG')
    create_screen(screen, 'Sheslow', background)

    option1_button_color = [215,132,121]
    option2_button_color = [215,132,121]
    option3_button_color = [215,132,121]
    loop = True 
    
    while(loop): 
        riddle_display(screen, "Schweigt stille plaudert nicht is an opera by Bach about what?")
        help_button(screen, name)
        option1(screen, "Love", option1_button_color)
        option2(screen, "Smoking", option2_button_color)
        option3(screen, "Coffee", option3_button_color)

        pygame.event.pump()
    
        for event in pygame.event.get():
            pos = pygame.mouse.get_pos()
            if event.type == pygame.quit: 
                pygame.display.quite()
                
            if 700+250 > pos[0] > 700 and 600+100 > pos[1] > 600:
                option1_button_color = [55, 115, 250]
                option1(screen, "Love", option1_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option1_button_color = [55, 115, 150]
                    option1(screen, "Love", option1_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option1_button_color = [215, 132, 121]
                    option1(screen, "Love", option1_button_color)
                    wrong_answers += 1
                    if wrong_answers > 3:
                        game_over()
                    else:
                        wrong_answer()
  
            else:
                option1_button_color = [215, 132, 121]
                option1(screen, "Love", option1_button_color)
                
            if 1000+250 > pos[0] > 1000 and 600+100 > pos[1] > 600:
                option2_button_color = [55, 115, 250]
                option2(screen, "Smoking", option2_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option2_button_color = [55, 115, 150]
                    option2(screen, "Smoking", option2_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option2_button_color = [215, 132, 121]
                    option2(screen, "Smoking", option2_button_color)
                    wrong_answers += 1
                    if wrong_answers > 3:
                        game_over()
                    else:
                        wrong_answer()
                    
            else:
                option2_button_color = [215, 132, 121]
                option2(screen, "Smoking", option2_button_color)
            
            if 400+250 > pos[0] > 400 and 600+100 > pos[1] > 600:
                option3_button_color = [55, 115, 250]
                option3(screen, "Coffee", option3_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option3_button_color = [55, 115, 150]
                    option3(screen, "Coffee", option3_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option3_button_color = [215, 132, 121]
                    option3(screen, "Coffee", option3_button_color)
                    clueSix(name, major, guide, wrong_answers)
                    
            else:
                option3_button_color = [215, 132, 121]
                option3(screen, "Coffee", option3_button_color)
        
            if event.type == VIDEORESIZE:
                make_fullscreen(background, event)

def clueSix(name, major, guide, wrong_answers):
    pygame.display.quit()
    screen = pygame.display.set_mode((500, 500), HWSURFACE | DOUBLEBUF | RESIZABLE)
    if guide == "Santa":
        background = pygame.image.load('stadiumsanta.JPG')
    elif guide == "Harry Potter":
        background = pygame.image.load('stadiumhp.JPG')
    elif guide == "Gollum":
        background = pygame.image.load('stadiumgollum.JPG')
    create_screen(screen, 'Stadium', background)

    option1_button_color = [215,132,121]
    option2_button_color = [215,132,121]
    option3_button_color = [215,132,121]
    loop = True 
    
    while(loop): 
        riddle_display(screen, "Which Drake Relays winner became the world's fastest human and won the super bowl?")
        help_button(screen, name)
        option1(screen, "Roger Craig", option1_button_color)
        option2(screen, "Bob Hayes", option2_button_color)
        option3(screen, "Rod Woodson", option3_button_color)

        pygame.event.pump()
    
        for event in pygame.event.get():
            pos = pygame.mouse.get_pos()
            if event.type == pygame.quit: 
                pygame.display.quite()
                
            if 700+250 > pos[0] > 700 and 600+100 > pos[1] > 600:
                option1_button_color = [55, 115, 250]
                option1(screen, "Roger Craig", option1_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option1_button_color = [55, 115, 150]
                    option1(screen, "Roger Craig", option1_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option1_button_color = [215, 132, 121]
                    option1(screen, "Roger Craig", option1_button_color)
                    wrong_answers += 1
                    if wrong_answers > 3:
                        game_over()
                    else:
                        wrong_answer()
 
            else:
                option1_button_color = [215, 132, 121]
                option1(screen, "Roger Craig", option1_button_color)
                
            if 1000+250 > pos[0] > 1000 and 600+100 > pos[1] > 600:
                option2_button_color = [55, 115, 250]
                option2(screen, "Bob Hayes", option2_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option2_button_color = [55, 115, 150]
                    option2(screen, "Bob Hayes", option2_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option2_button_color = [215, 132, 121]
                    option2(screen, "Bob Hayes", option2_button_color)
                    #maze(name, major, guide)
                    
            else:
                option2_button_color = [215, 132, 121]
                option2(screen, "Bob Hayes", option2_button_color)
            
            if 400+250 > pos[0] > 400 and 600+100 > pos[1] > 600:
                option3_button_color = [55, 115, 250]
                option3(screen, "Rod Woodson", option3_button_color)
                if event.type == pygame.MOUSEBUTTONDOWN:
                    option3_button_color = [55, 115, 150]
                    option3(screen, "Rod Woodson", option3_button_color)
                if event.type == pygame.MOUSEBUTTONUP:
                    option3_button_color = [215, 132, 121]
                    option3(screen, "Rod Woodson", option3_button_color)
                    wrong_answers += 1
                    if wrong_answers > 3:
                        game_over()
                    else:
                        wrong_answer()

            else:
                option3_button_color = [215, 132, 121]
                option3(screen, "Rod Woodson", option3_button_color)
        
            if event.type == VIDEORESIZE:
                make_fullscreen(background, event)
        
welcomeScreen()
